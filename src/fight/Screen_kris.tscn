[gd_scene load_steps=7 format=3 uid="uid://b8nxuamnutto3"]

[ext_resource type="PackedScene" uid="uid://b8pepwnkg674s" path="res://src/fight/Card.tscn" id="1_e7pql"]
[ext_resource type="Texture2D" uid="uid://c15oryw451pir" path="res://assets/pixel.png" id="2_gv4ll"]
[ext_resource type="Script" path="res://src/fight/health.gd" id="3_g5crb"]
[ext_resource type="Script" path="res://src/ragdoll/amalgam_display/amalgam_display.gd" id="5_ufjxj"]

[sub_resource type="Theme" id="Theme_wupdr"]
default_font_size = 12

[sub_resource type="GDScript" id="GDScript_ue8se"]
script/source = "class_name BattleScreenKris;
extends Control

signal player_won;
signal player_lost;

var player: Amalgam;
var player_drawn_abilities: Array[Dictionary];

var enemy: Amalgam;

@onready var player_health: ExportedAmalgamHealth = $PlayerHealth;
@onready var enemy_health: ExportedAmalgamHealth = $EnemyHealth;

@onready var player_ragdoll: AmalgamDisplay = %PlayerAmalgam;
@onready var enemy_ragdoll: AmalgamDisplay = %EnemyAmalgam;

@onready var exchange: ExportedCard = $ExchangeCard/Card;
@onready var bodyslam: ExportedCard = $BodySlamCard/Card;

@onready var player_cards: VBoxContainer = $Cards/Player;
@onready var enemy_cards: VBoxContainer = $Cards/Enemy;
@onready var skip: Button = $SkipTurn;

var skip_animations: bool;

func _ready():
	for i in player_cards.get_children():
		var player_card: ExportedCard = i;
		player_card.selected.connect(_on_player_card_selected);
	
	
@warning_ignore(\"shadowed_variable\")
func begin_fight(player: Amalgam, enemy: Amalgam) -> void:
	self.player = player;
	self.enemy = enemy;
	
	player_health.update_health_instant(player);
	player_ragdoll.display_amalgam(player);
	player_ragdoll.idle(AmalgamDisplay.IdleKinds.Standing);
	
	enemy_health.update_health_instant(enemy);
	enemy_ragdoll.display_amalgam(enemy);
	enemy_ragdoll.idle(AmalgamDisplay.IdleKinds.Standing);
	
	player_turn();

func player_turn():
	skip.show();
	var rng := RandomNumberGenerator.new();
	var abilities: Array[Dictionary] = player.combat_display_actions_simult_flattened(rng, 5, false);
	
	player_drawn_abilities = abilities;
	
	exchange.show();
	bodyslam.show();
	
	exchange.display_card(abilities[0]);
	bodyslam.display_card(abilities[1]);
	
	for i in range(2, len(abilities)):
		var card: ExportedCard = player_cards.get_child(i - 2);
		card.display_card(abilities[i]);
		card.show();


class PlayerEffectResolver extends Ability.EffectResolver:
	var battle_screen: BattleScreenKris;
	var _is_awaiting: bool = false;
	var _had_side_effects: bool = false;
	
	signal selection_finished(selected: Array);
	
	func blobs(from_selection: Array[Blob], count: int) -> Array[Blob]:
		_begin_selection(from_selection, count);
		
		var arr: Array[Blob];
		_is_awaiting = true;
		arr.assign(await selection_finished);
		_is_awaiting = false;
		return arr;
	
	func limbs(from_selection: Array[Limb], count: int) -> Array[Limb]:
		_begin_selection(from_selection, count);
		
		var arr: Array[Limb];
		_is_awaiting = true;
		arr.assign(await selection_finished);
		_is_awaiting = false;
		return arr;
	
	func dice_roll(r: int, _userdata: Dictionary) -> int:
		var value: int = randi() % r;
		print(\"rolled \", value);
		_had_side_effects = true;
		return value;
	
	func damage_blob(blob: Blob, amount: float, _userdata: Dictionary) -> void:
		blob._health -= amount;
		_had_side_effects = true;
		
		await _update_blob(blob, {
			Ability.ANIM_SLASH: [blob],
		});
	
	func stun_blob(blob: Blob, turn_count: int, _userdata: Dictionary) -> void:
		blob._stun += turn_count;
		_had_side_effects = true;
		
		await _update_blob(blob, {});
	
	func poison_blob(blob: Blob, amount: int, _userdata: Dictionary) -> void:
		blob._poison = amount;
		_had_side_effects = true;
		
		await _update_blob(blob, {
			Ability.ANIM_SLASH: [blob],
		});
	
	func heal_blob(blob: Blob, amount: float, _userdata: Dictionary) -> void:
		blob._health += amount;
		_had_side_effects = true;
		
		await _update_blob(blob, {
			Ability.ANIM_HEAL: [blob],
		});
	
	func _update_blob(blob: Blob, userdata: Dictionary):
		var ragdoll: AmalgamDisplay = _blobs_ragdoll(blob);
		
		battle_screen.player_health.update_health_slow(battle_screen.player);
		battle_screen.enemy_health.update_health_slow(battle_screen.enemy);
		
		if len(userdata) > 0:
			ragdoll.play_animation(userdata);
			
			if !battle_screen.skip_animations:
				await ragdoll.animation_finished;
	
	func _blobs_amalgam(blob: Blob) -> Amalgam:
		var is_player_blob: int = battle_screen.player.blobs.find(blob) != -1;
		var is_enemy_blob: int = battle_screen.enemy.blobs.find(blob) != -1;
		assert(is_player_blob ^ is_enemy_blob);
		
		if is_player_blob:
			return battle_screen.player;
		else:
			return battle_screen.enemy;
	
	
	func _blobs_ragdoll(blob: Blob) -> AmalgamDisplay:
		var is_player_blob: int = battle_screen.player.blobs.find(blob) != -1;
		var is_enemy_blob: int = battle_screen.enemy.blobs.find(blob) != -1;
		assert(is_player_blob ^ is_enemy_blob);
		
		if is_player_blob:
			return battle_screen.player_ragdoll;
		else:
			return battle_screen.enemy_ragdoll;
	
	func swap_limbs(a: Limb, b: Limb, _userdata: Dictionary) -> void:
		var all_blobs: Array[Blob] = battle_screen.player.blobs + battle_screen.enemy.blobs;
		var a_owner: Utils.LimbOwner = Utils.limb_owner(a, all_blobs);
		var b_owner: Utils.LimbOwner = Utils.limb_owner(b, all_blobs);
		assert(a_owner != null && b_owner != null);
		
		a_owner.owning_blob.limbs[a_owner.index_in_blob].limb = b;
		b_owner.owning_blob.limbs[b_owner.index_in_blob].limb = a;
		
		_had_side_effects = true;
		battle_screen.player_ragdoll.display_amalgam(battle_screen.player);
		battle_screen.enemy_ragdoll.display_amalgam(battle_screen.enemy);
	
	var _valid_selection: Array;
	var _currently_selected: Array;
	var _required_count: int;
	func _begin_selection(selectable: Array, count: int) -> void:
		battle_screen.player_ragdoll.effect(AmalgamDisplay.EffectKind.Selectable, selectable);
		battle_screen.enemy_ragdoll.effect(AmalgamDisplay.EffectKind.Selectable, selectable);
		
		_valid_selection = selectable;
		_currently_selected.clear();
		_required_count = count;
		
		battle_screen.player_ragdoll.blob_pressed.connect(_on_ragdoll_selection);
		battle_screen.player_ragdoll.limb_pressed.connect(_on_ragdoll_selection);
		battle_screen.enemy_ragdoll.blob_pressed.connect(_on_ragdoll_selection);
		battle_screen.enemy_ragdoll.limb_pressed.connect(_on_ragdoll_selection);
	
	func _on_ragdoll_selection(what) -> void:
		assert(what is Blob || what is Limb);
		
		var is_selectable: bool = _valid_selection.find(what) != -1;
		if is_selectable:
			var idx: int = _currently_selected.find(what);
			if idx == -1:
				_currently_selected.append(what);
			else:
				_currently_selected.remove_at(idx);
			
			battle_screen.player_ragdoll.effect(AmalgamDisplay.EffectKind.Selected, _currently_selected);
			battle_screen.enemy_ragdoll.effect(AmalgamDisplay.EffectKind.Selected, _currently_selected);
		
		var is_finished: bool = len(_currently_selected) <= _required_count;
		if is_finished:
			battle_screen.player_ragdoll.effect(AmalgamDisplay.EffectKind.Selected, []);
			battle_screen.player_ragdoll.effect(AmalgamDisplay.EffectKind.Selectable, []);
			battle_screen.enemy_ragdoll.effect(AmalgamDisplay.EffectKind.Selected, []);
			battle_screen.enemy_ragdoll.effect(AmalgamDisplay.EffectKind.Selectable, []);
			
			battle_screen.player_ragdoll.blob_pressed.disconnect(_on_ragdoll_selection);
			battle_screen.player_ragdoll.limb_pressed.disconnect(_on_ragdoll_selection);
			battle_screen.enemy_ragdoll.blob_pressed.disconnect(_on_ragdoll_selection);
			battle_screen.enemy_ragdoll.limb_pressed.disconnect(_on_ragdoll_selection);
			
			var selected: Array = _currently_selected;
			_currently_selected = [];
			_valid_selection.clear();
			
			selection_finished.emit(selected);
	
	func cancel_awaits() -> void:
		while _is_awaiting:
			selection_finished.emit([]);
	
	func had_side_effects() -> bool:
		return _had_side_effects;

var _last_resolver: PlayerEffectResolver;
func _on_player_card_selected(card: Dictionary):
	print(\"selecting card!\", card);
	_cancel_active_cast();
	
	var card_idx: int = player_drawn_abilities.find(card);
	assert(card_idx != -1);
	
	var resolver := PlayerEffectResolver.new();
	resolver.battle_screen = self;
	var effector := Ability.Effector.new(resolver, player, enemy, card);
	
	_last_resolver = resolver;
	
	var ability: Callable = card.get(Ability.EFFECT, func(_e): push_error(\"No effect found on card!\"));
	await ability.call(effector);
	
	_last_resolver = null;
	
	var is_same_ability: bool = card_idx == player_drawn_abilities.find(card);
	print(\"wrapping up ability \", card)
	if is_same_ability && _last_resolver.had_side_effects():
		_end_player_turn();

func _on_skip_turn_pressed() -> void:
	_end_player_turn();

func _end_player_turn() -> void:
	if _last_resolver == null:
		_last_resolver.cancel_awaits();
		_last_resolver = null;
	
	skip.hide();
	exchange.hide();
	bodyslam.hide();
	
	for card in player_cards.get_children():
		card.hide();
	
	player_drawn_abilities = [];
	
	var player_died := player.current_global_health() <= 0;
	var enemy_died := enemy.current_global_health() <= 0;
	
	if player_died:
		_player_lost();
	
	if enemy_died:
		_enemy_lost();
	
	if !player_died && !enemy_died:
		enemy_turn();

class EnemyResolver extends Ability.EffectResolver:
	var battle_screen: BattleScreenKris;
	var rng: RandomNumberGenerator;
	
	func blobs(from_selection: Array[Blob], count: int) -> Array[Blob]:
		if count <= len(from_selection):
			return from_selection;
		
		var ret: Array[Blob];
		for _i in count:
			var idx := rng.randi() % len(from_selection);
			ret.append(from_selection[idx]);
			from_selection.remove_at(idx);
		
		return ret;
	
	func limbs(from_selection: Array[Limb], count: int) -> Array[Limb]:
		if count <= len(from_selection):
			return from_selection;
		
		var ret: Array[Limb];
		for _i in count:
			var idx := rng.randi() % len(from_selection);
			ret.append(from_selection[idx]);
			from_selection.remove_at(idx);
		
		return ret;
	
	func dice_roll(r: int, _userdata: Dictionary) -> int:
		var value := rng.randi() % r;
		print(\"rolled \", value);
		return value;
	
	func damage_blob(blob: Blob, amount: float, userdata: Dictionary) -> void:
		blob._health -= amount;
		
		_update_blob(blob, userdata);
	
	func stun_blob(blob: Blob, turn_count: int, userdata: Dictionary) -> void:
		blob._stun += turn_count;
		
		_update_blob(blob, userdata);
	
	func poison_blob(blob: Blob, amount: int, userdata: Dictionary) -> void:
		blob._poision += amount;
		
		_update_blob(blob, userdata);
	
	func heal_blob(blob: Blob, amount: float, userdata: Dictionary) -> void:
		blob._health += amount;
		
		_update_blob(blob, userdata);
	
	func _update_blob(blob: Blob, userdata: Dictionary):
		var ragdoll: AmalgamDisplay = _blobs_ragdoll(blob);
		
		battle_screen.player_health.update_health_slow(battle_screen.player);
		battle_screen.enemy_health.update_health_slow(battle_screen.enemy);
		
		if len(userdata) > 0:
			ragdoll.play_animation(userdata);
			
			if !battle_screen.skip_animations:
				await ragdoll.animation_finished;
	
	func _blobs_ragdoll(blob: Blob) -> AmalgamDisplay:
		var is_player_blob: int = battle_screen.player.blobs.find(blob) != -1;
		var is_enemy_blob: int = battle_screen.enemy.blobs.find(blob) != -1;
		assert(is_player_blob ^ is_enemy_blob);
		
		if is_player_blob:
			return battle_screen.player_ragdoll;
		else:
			return battle_screen.enemy_ragdoll;
	
	func swap_limbs(a: Limb, b: Limb, _userdata: Dictionary) -> void:
		var all_blobs: Array[Blob] = battle_screen.player.blobs + battle_screen.enemy.blobs;
		var a_owner: Utils.LimbOwner = Utils.limb_owner(a, all_blobs);
		var b_owner: Utils.LimbOwner = Utils.limb_owner(b, all_blobs);
		assert(a_owner != null && b_owner != null);
		
		a_owner.owning_blob.limbs[a_owner.index_in_blob].limb = b;
		b_owner.owning_blob.limbs[b_owner.index_in_blob].limb = a;
		
		battle_screen.player_ragdoll.display_amalgam(battle_screen.player);
		battle_screen.enemy_ragdoll.display_amalgam(battle_screen.enemy);
	

func enemy_turn() -> void:
	var rng := RandomNumberGenerator.new();
	var abilities: Array[Dictionary] = enemy.combat_display_actions_simult_flattened(rng, 5, false);
	
	for i in len(abilities):
		var shown_card: ExportedCard = enemy_cards.get_child(i);
		shown_card.display_card(abilities[i]);
		shown_card.show();
	
	await get_tree().create_timer(1).timeout;
	
	var chosen: int = rng.randi() % len(abilities);
	var card: ExportedCard = enemy_cards.get_child(chosen);
	
	card.modulate = Color.RED;
	await get_tree().create_timer(0.3).timeout;
	
	var resolver := EnemyResolver.new();
	resolver.battle_screen = self;
	resolver.rng = rng;
	
	var effector := Ability.Effector.new(resolver, enemy, player, abilities[chosen]);
	await abilities[chosen][Ability.EFFECT].call(effector);
	
	for child in enemy_cards.get_children():
		child.hide();
	
	var player_died := player.current_global_health() <= 0;
	var enemy_died := enemy.current_global_health() <= 0;
	
	if player_died:
		_player_lost();
	
	if enemy_died:
		_enemy_lost();
	
	if !player_died && !enemy_died:
		player_turn();

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseButton:
		if event.pressed && event.button_index == MOUSE_BUTTON_LEFT:
			_cancel_active_cast();

func _cancel_active_cast() -> void:
	if _last_resolver != null:
		_last_resolver.cancel_awaits();
		_last_resolver = null;
		
		# maybe
		#await get_tree().process_frame

func _player_lost() -> void:
	player_lost.emit();


func _enemy_lost() -> void:
	player_won.emit();
"

[node name="Fight" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = SubResource("Theme_wupdr")
script = SubResource("GDScript_ue8se")

[node name="Cards" type="ReferenceRect" parent="."]
custom_minimum_size = Vector2(160, 0)
layout_mode = 1
anchors_preset = -1
anchor_left = 0.5
anchor_right = 0.5
anchor_bottom = 1.0
offset_top = 16.0
offset_bottom = -16.0
grow_horizontal = 2
grow_vertical = 2

[node name="Player" type="VBoxContainer" parent="Cards"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 8
alignment = 1

[node name="Card" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card2" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card3" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card4" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card5" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card6" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card7" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card8" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card9" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card10" parent="Cards/Player" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Enemy" type="VBoxContainer" parent="Cards"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 8
alignment = 1

[node name="Card" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card2" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card3" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card4" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card5" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card6" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card7" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card8" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card9" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="Card10" parent="Cards/Enemy" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 2

[node name="PlayerHealth" type="Control" parent="." node_paths=PackedStringArray("_global", "_limbs_container")]
layout_mode = 1
anchor_right = 0.3
anchor_bottom = 0.7
offset_left = 8.0
offset_top = 16.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("3_g5crb")
_global = NodePath("Global")
_limbs_container = NodePath("Limbs/VBoxContainer")

[node name="Global" type="TextureProgressBar" parent="PlayerHealth"]
layout_mode = 1
anchors_preset = -1
anchor_right = 1.0
anchor_bottom = 0.1
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Global"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Limbs" type="ReferenceRect" parent="PlayerHealth"]
layout_mode = 1
anchors_preset = -1
anchor_top = 0.1
anchor_right = 0.4
anchor_bottom = 1.0
offset_left = 8.0
offset_top = 8.0
border_color = Color(0, 0.629083, 0.476686, 1)

[node name="VBoxContainer" type="VBoxContainer" parent="PlayerHealth/Limbs"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Blob1" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob1"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob2" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob2"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob3" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob3"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob4" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob4"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob5" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob5"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob6" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob6"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob7" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob7"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob8" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob8"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob9" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob9"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob10" type="TextureProgressBar" parent="PlayerHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="PlayerHealth/Limbs/VBoxContainer/Blob10"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="EnemyHealth" type="Control" parent="." node_paths=PackedStringArray("_global", "_limbs_container")]
layout_mode = 1
anchor_left = 0.7
anchor_right = 1.0
anchor_bottom = 0.7
offset_top = 16.0
offset_right = -8.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("3_g5crb")
_global = NodePath("Global")
_limbs_container = NodePath("Limbs/VBoxContainer")

[node name="Global" type="TextureProgressBar" parent="EnemyHealth"]
layout_mode = 1
anchors_preset = -1
anchor_right = 1.0
anchor_bottom = 0.1
step = 0.1
value = 43.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Global"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Limbs" type="ReferenceRect" parent="EnemyHealth"]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.6
anchor_top = 0.1
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 8.0
offset_top = 8.0
border_color = Color(0, 0.629083, 0.476686, 1)

[node name="VBoxContainer" type="VBoxContainer" parent="EnemyHealth/Limbs"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Blob1" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob1"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob2" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob2"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob3" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob3"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob4" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob4"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob5" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob5"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob6" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob6"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob7" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob7"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob8" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob8"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob9" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob9"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="Blob10" type="TextureProgressBar" parent="EnemyHealth/Limbs/VBoxContainer"]
visible = false
custom_minimum_size = Vector2(0, 40)
layout_mode = 2
max_value = 1.0
step = 0.001
value = 1.0
nine_patch_stretch = true
texture_under = ExtResource("2_gv4ll")
texture_progress = ExtResource("2_gv4ll")
tint_under = Color(0.705939, 3.53761e-06, 3.85046e-07, 1)
tint_progress = Color(0, 0.686638, 3.85046e-07, 1)

[node name="ReferenceRect" type="ReferenceRect" parent="EnemyHealth/Limbs/VBoxContainer/Blob10"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
border_color = Color(3.24883e-07, 0.4224, 6.73831e-07, 1)
border_width = 4.0
editor_only = false

[node name="ExchangeCard" type="ReferenceRect" parent="."]
custom_minimum_size = Vector2(120, 120)
layout_mode = 1
anchors_preset = -1
anchor_top = 1.0
anchor_bottom = 1.0
offset_left = 16.0
offset_top = -16.0
offset_right = 16.0
offset_bottom = -16.0
grow_vertical = 0

[node name="Card" parent="ExchangeCard" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 0
anchors_preset = 0
anchor_right = 0.0
anchor_bottom = 0.0
offset_right = 130.0
offset_bottom = 120.0
grow_horizontal = 1
grow_vertical = 1

[node name="BodySlamCard" type="ReferenceRect" parent="."]
custom_minimum_size = Vector2(120, 120)
layout_mode = 1
anchors_preset = -1
anchor_top = 1.0
anchor_bottom = 1.0
offset_left = 168.0
offset_top = -16.0
offset_right = 16.0
offset_bottom = -16.0
grow_vertical = 0

[node name="Card" parent="BodySlamCard" instance=ExtResource("1_e7pql")]
visible = false
layout_mode = 0
anchors_preset = 0
anchor_right = 0.0
anchor_bottom = 0.0
offset_right = 130.0
offset_bottom = 120.0
grow_horizontal = 1
grow_vertical = 1

[node name="SkipTurn" type="Button" parent="."]
custom_minimum_size = Vector2(240, 120)
layout_mode = 1
anchors_preset = -1
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -256.0
offset_top = -136.0
offset_right = -16.0
offset_bottom = -16.0
grow_horizontal = 0
grow_vertical = 0
theme_override_font_sizes/font_size = 36
text = "Skip Turn"

[node name="PlayerRagdollArea" type="ReferenceRect" parent="."]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.1
anchor_top = 0.15
anchor_right = 0.4
anchor_bottom = 0.78

[node name="Origin" type="Control" parent="PlayerRagdollArea"]
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 0

[node name="PlayerAmalgam" type="Node2D" parent="PlayerRagdollArea/Origin"]
unique_name_in_owner = true
script = ExtResource("5_ufjxj")

[node name="EnemyRagdollArea" type="ReferenceRect" parent="."]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.6
anchor_top = 0.15
anchor_right = 0.9
anchor_bottom = 0.78

[node name="Origin" type="Control" parent="EnemyRagdollArea"]
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 0

[node name="EnemyAmalgam" type="Node2D" parent="EnemyRagdollArea/Origin"]
unique_name_in_owner = true
script = ExtResource("5_ufjxj")

[connection signal="selected" from="ExchangeCard/Card" to="." method="_on_player_card_selected"]
[connection signal="selected" from="BodySlamCard/Card" to="." method="_on_player_card_selected"]
[connection signal="pressed" from="SkipTurn" to="." method="_on_skip_turn_pressed"]
